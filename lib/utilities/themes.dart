import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter_hangman/utilities/appConfiguration.dart';

Map<String, dynamic> themedata = {
  "themeList": [
    {
      "id": "animals",
      "minScore": 0,
      "name": "Animals",
      "questions": [
        "Alligator",
        "Ant",
        "Bear",
        "Bee",
        "Blue Whale",
        "Bug",
        "Rabbit",
        "Camel",
        "Cat",
        "Cheetah",
        "Chicken",
        "Chimpanzee",
        "Toucan",
        "Clownfish",
        "Cow",
        "Crab",
        "Crocodile",
        "Deer",
        "Dog",
        "Dolphin",
        "Duck",
        "Eagle",
        "Elephant",
        "Donkey",
        "HouseFly",
        "Fox",
        "Frog",
        "Giraffe",
        "Goat",
        "Goldfish",
        "Gorilla",
        "Kingfisher",
        "Hamster",
        "Hedgehog",
        "Beetle",
        "Hippo",
        "Horse",
        "Tarantula",
        "Jelly fish",
        "Kangaroo",
        "Whale",
        "Wasp",
        "Moth",
        "Leopard",
        "Lion",
        "Lobster",
        "Sloth",
        "Manatee",
        "Eel",
        "Monkey",
        "Hornbill",
        "Octopus",
        "Otter",
        "Owl",
        "Ox",
        "Panda",
        "Parrot",
        "Peacock",
        "Penguin",
        "Pig",
        "Pigeon",
        "Platypus",
        "Polar Bear",
        "Puma",
        "Komodo Dragon",
        "Hen",
        "Koala",
        "Chameleon",
        "Hyena",
        "Rhinoceros",
        "Flamingo",
        "Scorpion",
        "Seahorse",
        "Seal",
        "Shark",
        "Sheep",
        "Hawk",
        "Snail",
        "Snake",
        "Lizard",
        "Spider",
        "Ostrich",
        "Squirrel",
        "Star fish",
        "Stingray",
        "Swan",
        "Tiger",
        "Turkey",
        "Turtle",
        "Walrus",
        "Iguana",
        "Wolf",
        "Yak",
        "Zebra",
        "Anaconda"
            "Goose",
        "Armadillo",
        "Vampire Bat",
        "Seagull",
        "Woodpecker",
        "Raccoon",
      ]
    },
    {
      "id": "bollywood movies",
      "name": "Bollywood Movies",
      "minScore": 0,
      "questions": [
        "Andaz Apna Apna",
        "Golmaal",
        "Bade Miyan Chote Miyan"
            "Hera Pheri",
        "De Dana Dan",
        "Singh is King",
        "Main Hoon Na",
        "Delhi Belly",
        "Mere Baap Pehle Aap",
        "Albert Pinto Ko Gussa Kyon Ata Hai",
        "Luv Shuv Tey Chicken Khurana",
        "Manorama Six Feet Under",
        "Via Darjeeling",
        "36 China Town",
        "Hazaaron Khwaishein Aisi",
        "Hamari Adhuri Kahani",
        "Ajab Prem Ki Ghazab Kahani",
        "Happy Bhag Jayegi",
        "Shubh Mangal Zyada Saavdhan",
        "Yaadon Ki Baaraat",
        "Matru Ki Bijlee Ka Mandola",
        "Malang",
        "Street Dancer",
        "Tanhaji",
        "Chhapaak",
        "Shirin Farhad Ki Toh Nikal Padi",
        "Kabir Singh",
        "URI : The Surgical Strike",
        "Good Newz",
        "Chhichhore",
        "Dream Girl",
        "Marjaavaan",
        "Batla House",
        "The Sky is Pink",
        "Kalank",
        "Manikarnika : The Queen Of Jhansi",
        "Pati Patni Aur Woh",
        "De De Pyaar De",
        "Ek Ladki Ko Dekha Toh Aisa Laga",
        "Luka Chuppi",
        "Lage Raho Munna Bhai",
        "Zindagi Na Milegi Dobara",
        "Dangal",
        "Dear Zindagi",
        "Gangs Of Wasseypur",
        "Hum Aapke Hain Kaun",
        "The Lunchbox",
        "Jab We Met",
        "Rang De Basanti",
        "Patthar Ke Sanam",
        "Black Friday",
        "Kuch Kuch Hota Hai",
        "Omkara",
        "Mera Naam Joker",
        "Kal Ho Na Ho",
        "Bajrangi Bhaijaan",
        "Veer-Zaara",
        "Maine Pyaar Kiya",
        "Udaan",
        "Love Aaj Kal",
        "Haider",
        "Dil Chahta Hai",
        "Drishyam",
        "Guru",
        "Sparsh",
        "Guide",
        "Vaastav",
        "Kaagaz Ke Phool",
        "AirLift",
        "Dhadak",
        "Mumbai Meri Jaan",
        "Befikre",
        "Oye Lucky Lucky Oye",
        "Manjhi : The Mountain Man",
        "Chhoti Si Baat",
        "Dilwale Dulhania Le Jayenge",
        "Parinda",
        "Bajirao Mastani",
        "Vicky Donor",
        "Lootera",
        "Neeraja",
        "Nil Battey Sannata",
        "Pad Man",
        "Jaane Tu Ya Jaane Na",
        "Veere Di Wedding",
        "Sui Dhaaga",
        "Manmarziyaan",
        "Meri Pyaari Bindu",
        "OK Jaanu",
        "Baghban",
        "Jai Ho",
        "Half Girlfriend",
        "Raees",
        "Badrinath Ki Dulhania",
        "Haseena Parker",
        "Hasee Toh Phasee",
        "Mausam",
        "Bareilly Ki Barfi",
        "Phata Poster Nikhla Hero",
        "Main Tera Hero",
      ]
    },
    {
      "id": "item_songs",
      "name": "Item Songs",
      "minScore": 0,
      "questions": [
        "Chikni Chameli",
        "Sheila Ki Jawani",
        "Dilbar",
        "Munni Badnaam Hui",
        "Ek Do Teen",
        "Chamma Chamma",
        "Husn Parcham",
        "Haseeno Ka Deewana",
        "Gali Gali",
        "Pink Lips",
        "Laila Main Laila",
        "Baby Doll",
        "Rock The Party",
        "I Wanna Tera Ishq",
        "Kamariya",
        "Shake That Booty",
        "Do Peg Maar",
        "Yaar Na Miley",
        "Mashallah",
        "Chhote Chhote Peg",
        "Ki Kariye Nachna Aaonda Nahin",
        "Balma",
        "Dance Basanti",
        "Assalam-E-Ishq",
        "Kamli",
        "Ram Chahe Leela",
        "Mehbooba",
        "Dhoom Machale Dhoom",
        "Hug Me",
        "Zara Zara Touch Me",
        "Ishq Shava",
        "Maahi Ve",
        "Nachan Farrate",
        "Aashiq Banaya Aapne",
        "Manzoor-E-Khuda",
        "Dhating Nach",
        "Afghan Jalebi",
        "Pinky",
        "Mungda",
        "Oh Janiya",
        "Mera Naam Mary",
        "Paani Waala Dance",
        "Tu Cheez Badi Hai Mast Mast",
        "Kambakht Ishq",
        "Khallas",
        "Anarkali Disco Chali",
        "O Saki Saki",
        "Fevicol Se",
        "Beedi",
        "Luv Letter",
        "Babli Badmash Hai",
        "Aga Baai",
        "Lazy Lamhe",
        "Neendein Khul Jati Hai",
        "Jaaneman Aah",
        "Aaj Raat Ka Scene",
        "Daddy Mummy",
        "Kundi Mat Khadkao",
        "Yeh Mera Dil",
        "Awesome Mora Mahiya",
        "Halkat Jawani",
        "Aao Kabhi Haveli Pe",
        "Resham Ka Rumaal",
        "Mayya Mayya",
        "Desi Look",
        "Ishq Samundar",
        "Main Aai UP Bihar Lootne",
        "Jaado Ki Jhappi",
        "Kajra Re",
        "Hotty Naughty",
        "Oye Oye",
        "Parda Parda",
        "Mit Jaaye Gham",
        "Crazy Kiya Re",
        "Manali Trance",
        "Aao Raja",
        "Bebo",
        "Hoth Rasiley",
        "Aapka Kya Hoga Janab-e-Ali",
        "Babuji Zara Dheere Chalo",
        "Chammak Challo",
        "Character Dheela",
        "1234 Get On The Dance Floor",
        "Party On My Mind",
        "Shut Up And Bounce",
        "Tinku Jiya",
        "Jawaani Le Doobi",
        "Aa Zara Karib Se",
        "Dhak Dhak Karne Laga",
        "Jhalla Wallah",
        "Aa Ante Amalapuram",
        "Dekhta Hai Tou Kya",
        "Marjaani",
        "Razia Gundo Mein Phas Gayi",
        "Dekh Le",
        "Sharara Sharara",
        "Ishq Khudai",
        "Love Mera Hit Hit",
        "Jalebi Bai",
        "Ghagra",
      ]
    },
    {
      "id": "cartoons",
      "name": "Cartoon",
      "minScore": 0,
      "questions": [
        "Oswald",
        "Noddy",
        "Pooh",
        "Shin Chan",
        "Tom",
        "Jerry",
        "Mr. Bean",
        "Piglet",
        "Jack-Jack",
        "Nobita",
        "Shizuka",
        "Gian",
        "Popeye",
        "Johnny Bravo",
        "Scooby-Doo",
        "Bluto",
        "Olive Oyl",
        "Dexter",
        "Dee Dee",
        "Buttercup",
        "Blossom",
        "Mojo Jojo",
        "Bart Simpson",
        "Nancy Drew",
        "Homer Simpson",
        "Frank Hardy",
        "Bugs Bunny",
        "Daffy Duck",
        "Tweety Bird",
        "Tintin",
        "Snowy",
        "Dora",
        "Boots",
        "SpongeBob SquarePants",
        "Nemo",
        "Dory",
        "Crush",
        "Bruce",
        "Rubble",
        "Zuma",
        "Alex",
        "Chickaletta",
        "Motu",
        "Patlu",
        "Chingum",
        "Marshall",
        "Chase",
        "Everest",
        "Skye",
        "Patrick Star",
        "Plankton",
        "Charlie Brown",
        "Snoopy",
        "Woodstock",
        "Schroeder",
        "Fred Flintstone",
        "Dino",
        "Tweety",
        "Bugs Bunny",
        "Daffy Duck",
        "Porky Pig",
        "Sylvester",
        "Orbitty",
        "Elroy Jetson",
        "Mr. Spacely",
        "George Jetson",
        "Asterix",
        "Obelix",
        "Eric Cartman",
        "Token Black",
        "Mr. Slave",
        "Stan Marsh",
        "Linda Stotch",
        "Pikachu",
        "Ash Ketchum",
        "Tsubame",
        "Yumeko Kawai",
        "Kanzo Hattori",
        "Fantasmagorie",
        "Misty",
        "Brock",
        "Gary Oak",
        "Clemont",
        "Shriek",
        "Winslow T. Oddfellow",
        "Surfer Girl",
        "Mung Daal",
        "Gazpacho",
        "Chowder",
        "Kimchi",
        "Panini",
        "Lumpus",
        "Doraemon",
        "Tamako Nobi",
        "Suneo",
        "Dookie",
        "Dave",
        "Raven",
        "Beast Boy",
        "Death Stroke",
        "Cyborg",
        "Starfire",
        "Batman",
        "Joker",
        "Robin",
        "Poison Ivy",
        "Harley Quinn",
        "Two-Face",
        "Stewei Griffin",
        "Brian Griffin",
        "Glenn Quagmire",
        "Bertram",
        "Cleveland Brown",
        "Herbert",
        "Leela",
        "Bender",
        "Zoidberg",
        "Philip Fry",
        "Amy Wong",
        "Kif Kroker",
        "Chotta Bheem",
        "Keymon Ache",
        "Gattu",
        "Battu",
        "Shiva",
      ]
    },
    {
      "id": "bollywood actors",
      "minScore": 0,
      "name": "Bollywood Actors",
      "questions": [
        "Shah Rukh Khan",
        "Amitabh Bachchan",
        "Aamir Khan",
        "Salman Khan",
        "Akshay Kumar",
        "Ranbir Kapoor",
        "Ranveer Singh",
        "Ajay Devgn",
        "Hrithik Roshan",
        "Anil Kapoor",
        "Irrfan Khan",
        "Saif Ali Khan",
        "Kareena Kapoor Khan",
        "Sanjay Dutt",
        "Anupam Kher",
        "Deepika Padukone",
        "Paresh Rawal",
        "Priyanka Chopra",
        "Varun Dhawan",
        "Ayushmann Khurrana",
        "Vicky Kaushal",
        "Rajkummar Rao",
        "Janhvi Kapoor",
        "Sara Ali Khan",
        "Ananya Pandey",
        "Tara Sutaria",
        "Alia Bhatt",
        "Sidhart Malhotra",
        "Tiger Shroff",
        "Kriti Sanon",
        "Kriti Kharbanda",
        "Pooja Hegde",
        "Riteish Deshmukh",
        "Abhishek Bachchan",
        "Jacqueline Fernandez",
        "John Abraham",
        "Asin",
        "Zareen Khan",
        "Katrina Kaif",
        "Farhan Akhtar",
        "Abhay Deol",
        "Sonakshi Sinha",
        "Diana Penty",
        "Kartik Aaryan",
        "Disha Patani",
        "Aditya Roy Kapoor",
        "Shraddha Kapoor",
        "Vidya Balan",
        "Taapsee Pannu",
        "Sonam Kapoor",
        "Kriti Kulhari",
        "Sharman Joshi",
        "Parineeti Chopra",
        "Rakul Preet Singh",
        "Tabu",
        "Kajol",
        "Shahid Kapoor",
        "Kiara Advani",
        "Diljit Dosanjh",
        "Aishwarya Rai Bachchan",
        "Madhuri Dixit",
        "Anushka Sharma",
        "Kangana Ranaut",
        "Rani Mukerji",
        "Bipasha Basu",
        "Amrita Rao",
        "Dia Mirza",
        "Yami Gautam",
        "Huma Qureshi",
        "Shriya Saran",
        "Nushrat Bharucha",
        "Shruti Haasan",
        "Anushka Shetty",
        "Tamannaah Bhatia",
        "Sunny Leone",
        "Adah Sharma",
        "Radhika Apte",
        "Emraan Hashmi",
        "Samir Kochhar",
        "Jimmy Shergill",
        "Preity Zinta",
        "Karisma Kapoor",
        "Sonali Bendre",
        "Mohnish Bahl",
        "Arshad Warsi",
        "Sreyas Talpade",
        "Tusshar Kapoor",
        "Kunal Khemu",
        "Neil Nitin Mukesh",
        "Richa Chadha",
        "Akshaye Khanna",
        "Ileana D’Cruz",
        "Pulkit Samrat",
        "Urvashi Rautela",
        "Aparshakti Khurana"
            "Siddhant Chaturvedi",
        "Boman Irani",
        "Gracy Singh",
        "Lara Dutta",
        "Shilpa Shetty",
        "Govinda",
      ]
    },
    {
      "id": "hollywood actors",
      "minScore": 0,
      "name": "Hollywood Actors",
      "questions": [
        "Dwayne Johnson",
        "Loan Gruffudd",
        "Leonardo DiCaprio",
        "Kate Winslet",
        "Kristen Stewart",
        "Robert Pattinson",
        "Robert Downey Jr",
        "Scarlett Johansson",
        "Chris Hemsworth",
        "Chris Evans",
        "Tom Holland",
        "Lucy Hale",
        "Shay Mitchell",
        "Tom Cruise",
        "Will Smith",
        "Tom Hanks",
        "Johnny Depp",
        "Brad Pitt",
        "Matt Damon",
        "Morgan Freeman",
        "Hugh Jackman",
        "Charlie Chaplin",
        "Jennifer Lawrence",
        "Natalie Portman",
        "Jim Carrey",
        "Bradley Cooper",
        "Chris Patt",
        "Dustin Hoffman",
        "Tom Hardy",
        "Ryan Reynolds",
        "George Clooney",
        "Sylvester Stallone",
        "Cate Blanchett",
        "Julia Roberts",
        "Arnold Schwarzenegger",
        "Karen Gillan",
        "Jessica Barden",
        "Bryce Dallas Howard",
        "Lily James",
        "Tessa Thompson",
        "Brie Larson",
        "Noah Centineo",
        "Jacob Elordi",
        "Gal Gadot",
        "Katherine Langford",
        "Dylan Minnette",
        "Nina Dobrev",
        "Ian Somerhalder",
        "Paul Wesley",
        "Angelina Jolie",
        "Mila Kunis",
        "Sandra Bullock",
        "Emma Stone",
        "Emma Watson",
        "Halle",
        "Anne Hathaway",
        "Salma Hayek",
        "Selena Gomez",
        "Julianne Moore",
        "Jessica Alba",
        "Jennifer Aniston",
        "Cameron diaz",
        "Rachel McAdams",
        "Jennifer Lopez",
        "Ellen Page",
        "Jonathan Bennett",
        "Zac Efron",
        "Vanessa Hudgens",
        "Miley Cyrus",
        "Matthew Perry",
        "Courteney Cox",
        "Matt LeBlanc",
        "Lisa Kudrow",
        "David Schwimmer",
        "Cole Sprouse",
        "Justin Timberlake",
        "Ben affleck",
        "Joey King",
        "Shannon Purser",
        "June Diane Raphael",
        "Madeline Brewer",
        "Jake Gyllenhaal",
        "George Clooney",
        "Natasha Lyonne",
        "StingrayRosario Dawson",
        "Alison Brie",
        "Lana Condor",
        "Paul Rudd",
        "KJ Apa",
        "Juan Pablo Raba",
        "Billy Magnussen",
        "Anna Kendrick",
        "Camila Mendes",
        "Florence Pugh",
        "Kiernan Shipka"
            "Henry Cavill",
        "Zandaya",
        "Bella Throne",
        "Barbie Ferreria",
        "Veronica Dunne",
        "Timothee Chalamet",
      ]
    },
    {
      "id": "food",
      "name": "Food & drinks",
      "minScore": 0,
      "questions": [
        "7 Up",
        "Acid",
        "Almond",
        "Anorexia",
        "Apple",
        "Apple pie",
        "Bacon",
        "Bagel",
        "Banana",
        "Basil",
        "Bean",
        "Beer",
        "Berry",
        "Bite",
        "Bitter",
        "Bland",
        "Bounty",
        "Brandy",
        "Breakfast",
        "Broccoli",
        "Brownie",
        "Bulimia",
        "Burger",
        "Burger King",
        "Burritos",
        "Butter",
        "Cabbage",
        "Caesar",
        "Cake",
        "Calamari",
        "Candy",
        "Celery",
        "Champagne",
        "Cheese",
        "Cheeseburger",
        "Cheesecake",
        "Chewing gum",
        "Chili",
        "Chips",
        "Chocolate",
        "Coca-Cola",
        "Coffee",
        "Cookie",
        "Corn",
        "Corn Flakes",
        "Cottage cheese",
        "Crunchy",
        "Cupcake",
        "Dinner",
        "Donut",
        "Dr. Pepper",
        "Eggs",
        "Fanta",
        "Fork",
        "French fries",
        "Fried chicken",
        "Garlic bread",
        "Ginger",
        "Herbs",
        "Hot dog",
        "Hot wings",
        "Ice cream",
        "Jelly",
        "KFC",
        "Kebab",
        "Lasagna",
        "Lemonade",
        "Lobster",
        "Lollipop",
        "Lunch",
        "Mac and cheese",
        "Margarine",
        "McDonald's",
        "Milk",
        "Mint",
        "Mountain Dew",
        "Mushroom",
        "Noodles",
        "Nougat",
        "Onion",
        "Oreo",
        "Pancakes",
        "Pasta",
        "Pepper",
        "Pepsi",
        "Pizza",
        "Pizza Hut",
        "Plate",
        "Popcorn",
        "Potato",
        "Quesadilla",
        "Raw",
        "Restaurant",
        "Ribs",
        "Rice",
        "Salty",
        "Sausage",
        "Shrimp",
        "Snacks",
        "Soup",
        "Sour",
        "Spaghetti",
        "Spicy",
        "Spoon",
        "Sprite",
        "Steak",
        "Stomach rumble",
        "Subway",
        "Sugar",
        "Sushi",
        "Sweet",
        "Taco Bell",
        "Tacos",
        "Tea",
        "Toast",
        "Toffee",
        "Tuna",
        "Waffles",
        "Water",
        "Watermelon",
        "Wendy's",
        "White chocolate",
        "Yogurt"
      ]
    },
    {
      "id": "hollywood movies",
      "minScore": 0,
      "name": "Hollywood Movies",
      "questions": [
        "Godzilla",
        "Contagion",
        "IT"
            "Annabelle Comes Home",
        "Inception",
        "The Conjuring",
        "InterStellar",
        "Aquaman",
        "Jurassic Park",
        "Oculus",
        "Charlie’s Angels",
        "The Nun",
        "Man In Black",
        "Mission Impossible",
        "Once Upon A Time In Hollywood",
        "Harry Potter And The Goblet Of Fire",
        "Home Alone",
        "Baby’s Day Out",
        "Final Destination",
        "Gravity",
        "Richie Rich",
        "Beauty and The Beast",
        "The Incredible HULK",
        "The Lord Of The Rings",
        "The Girl Next Door",
        "The Possession Of Hannah Grace",
        "King Kong",
        "Dunkirk",
        "Robin Hood",
        "BumbleBee",
        "It Follows",
        "The Mummy Returns",
        "Traitor",
        "All I See is You",
        "Sherlock Holmes",
        "What If",
        "Superman Returns",
        "Transformers",
        "Hijacked Flight 285",
        "Moonlight",
        "Twilight",
        "Journey To The Center Of The Earth",
        "Ghost Rider",
        "Rush Hour",
        "Troy",
        "The Ring",
        "Oblivion",
        "Mean Girls",
        "Another Cinderella Story",
        "Star Trek",
        "Rambo",
        "The Intruder",
        "The Forbidden Kingdom",
        "Red Eye",
        "Pitch Perfect",
        "The Love Punch",
        "Horrible Bosses",
        "The Bachelors",
        "Titanic",
        "The Godfather",
        "Rocky",
        "To Kill A Mockingbird",
        "Unforgiven",
        "The Exorcist",
        "The Wizard Of Oz",
        "The Pursuit Of Happyness",
        "The Wolf Of Wall Street",
        "Gone With The Wind",
        "Air Force One",
        "The Dark Knight",
        "James Bond: Casino Royale",
        "Predator",
        "Taken",
        "Old School",
        "Knocked Up",
        "Pretty Woman",
        "When Harry Met Sally",
        "Clueless",
        "10 Things I Hate About You",
        "A Beautiful Mind ",
        "Boyhood",
        "12 Years A Slave",
        "The Cabin In The Woods",
        "Paranormal Activity",
        "Sin City",
        "The Dark Knight Rises",
        "Insomnia",
        "The Game",
        "Shutter Island",
        "Munich",
        "The Next Three days",
        "Bad Santa",
        "Die Hard",
        "Mars Attack",
        "Avatar",
        "2001: A Space Odyssey",
        "Spotlight",
        "The Avengers",
        "Silent Night",
        "It Happened On Fifth Avenue",
      ]
    },
    {
      "id": "games",
      "minScore": 0,
      "name": "Games",
      "questions": [
        "2D",
        "3D",
        "AAA",
        "Age of Empires",
        "Aimbot",
        "Alone in the Dark",
        "Amiga",
        "Angry Birds",
        "Assassin's Creed",
        "Atari",
        "Augmented reality",
        "Baldur's Gate",
        "Bastion",
        "Batman: Arkham",
        "Battlefield",
        "BioShock",
        "Black Mesa",
        "Bloodborne",
        "Bomberman",
        "Borderlands",
        "Bot",
        "Call of Duty",
        "Castle Crashers",
        "Casual gamer",
        "Cheating",
        "Chrono Trigger",
        "Cities: Skylines",
        "Civilization",
        "Co-op",
        "Command & Conquer",
        "Contra",
        "Counter-Strike",
        "Crash Bandicoot",
        "Critical hit",
        "Crysis",
        "DRM free",
        "Dark Souls",
        "Dead Space",
        "Deathmatch",
        "Destiny",
        "Detroit: Become Human",
        "Deus Ex",
        "Diablo",
        "Dishonored",
        "Doom",
        "Dota",
        "Double jump",
        "Dragonborn",
        "Dungeon crawl",
        "EVE Online",
        "Emulator",
        "EverQuest",
        "FPP",
        "Fable",
        "Fallout",
        "Fifa",
        "Final Fantasy",
        "Firewatch",
        "For Honor",
        "Fortnite",
        "Forza Horizon",
        "Fruit Ninja",
        "Game over",
        "Garry's Mod",
        "Gears of War",
        "Geralt of Rivia",
        "God mode",
        "God of War",
        "Gothic",
        "Gran Turismo",
        "Grand Theft Auto",
        "Grinding",
        "Guild Wars",
        "Guitar Hero",
        "Half-Life",
        "Halo",
        "Head-shot",
        "Health Potion",
        "Hearthstone",
        "Heroes of Might and Magic",
        "Hit point",
        "Hitman",
        "Horizon Zero Dawn",
        "Inside",
        "Inventory",
        "Joystick",
        "Kerbal Space Program",
        "Kratos",
        "Lag",
        "Lara Croft",
        "League of Legends",
        "Left 4 Dead",
        "Life is Strange",
        "Limbo",
        "Lineage",
        "Link",
        "LittleBigPlanet",
        "MMORPG",
        "Maple Story",
        "Mario",
        "Mass Effect",
        "Max Payne",
        "Medal of Honor",
        "Mega Man",
        "Metal Gear Solid",
        "Metro 2033",
        "Minecraft",
        "Mirror's Edge",
        "Monster Hunter",
        "Mortal Kombat",
        "Mount & Blade",
        "Multiplayer",
        "Need for Speed",
        "Nintendo Switch",
        "Noob",
        "Overwatch",
        "PUBG",
        "Pac-Man",
        "Payday",
        "Pillars of Eternity",
        "Pinball",
        "Ping",
        "Plants Vs. Zombies",
        "PlayStation",
        "Portal",
        "Prince of Persia",
        "Quake",
        "RPG",
        "RTS",
        "Rage quit",
        "Raid Boss",
        "Rainbow Six",
        "Red Dead Redemption",
        "Resident Evil",
        "Rocket League",
        "Silent Hill",
        "Single player",
        "Snake",
        "Spawn point",
        "StarCraft",
        "Street Fighter",
        "Super Mario",
        "Super Meat Boy",
        "Super Metroid",
        "Super Smash Bros",
        "Superhot",
        "TPP",
        "Team Fortress",
        "Tekken",
        "Terraria",
        "Tetris",
        "The Elder Scrolls",
        "The Last of Us",
        "The Legend of Zelda",
        "The Sims",
        "Thief",
        "This War Of Mine",
        "TitanFall",
        "Tom Clancy's",
        "Tomb Raider",
        "Tony Hawk’s Pro Skater",
        "Torchlight",
        "Uncharted",
        "Unreal Tournament",
        "Until Dawn",
        "Walkthrough",
        "Warcraft",
        "Warframe",
        "Warhammer",
        "Watch Dogs",
        "Witcher",
        "Wolfenstein",
        "World of Tanks",
        "World of Warcraft",
        "Xbox"
      ]
    },
    {
      "id": "tv",
      "name": "TV series",
      "minScore": 0,
      "questions": [
        "9-1-1",
        "A Discovery of Witches",
        "Arrow",
        "Avatar: The Last Airbender",
        "Batman: The Animated Series",
        "Black Mirror",
        "Blue Bloods",
        "Breaking Bad",
        "Brooklyn Nine-Nine",
        "Charmed",
        "Cosmos: Possible Worlds",
        "Daredevil",
        "Death Note",
        "Dexter",
        "Doctor Who",
        "Dragon Ball Z",
        "FBI",
        "Family Guy",
        "Friends",
        "Futurama",
        "Game of Thrones",
        "Gotham",
        "Hannibal",
        "Homecoming",
        "House",
        "House of Cards",
        "How I Met Your Mother",
        "Justified",
        "Last Man Standing",
        "Legacies",
        "Legends of Tomorrow",
        "Lucifer",
        "Mad Men",
        "Modern Family",
        "Mr. Bean",
        "Narcos",
        "Narcos: Mexico",
        "Pride and Prejudice",
        "Rick and Morty",
        "Riverdale",
        "Seinfeld",
        "Sherlock",
        "Silicon Valley",
        "Star Trek: The Next Generation",
        "Stranger Things",
        "Suits",
        "The Big Bang Theory",
        "The Blacklist",
        "The Flash",
        "The Good Doctor",
        "The Handmaid's Tale",
        "The Newsroom",
        "The Vampire Diaries",
        "The Walking Dead",
        "The Wire",
        "The X-Files",
        "Titans",
        "Tom Clancy's Jack Ryan",
        "Westworld",
        "You",
        "Young Sheldon"
      ]
    },
    {
      "id": "fictional_character",
      "minScore": 0,
      "name": "Fictional characters",
      "questions": [
        "Achilles",
        "Aladdin",
        "Alien",
        "Amazon",
        "Angel",
        "Aramis",
        "Asterix",
        "Atos",
        "Autobots",
        "Batman",
        "Biker Mice from Mars",
        "Bilbo Baggins",
        "Blade",
        "Borat",
        "Bruce Wayne",
        "Buffy",
        "Bugs Bunny",
        "Captain America",
        "Captain Nemo",
        "Centaur",
        "Chandler Bing",
        "Conan the Barbarian",
        "Cyclop",
        "Daredevil",
        "Darth Vader",
        "Deadpool",
        "Decepticons",
        "Devil",
        "Donald Duck",
        "Donatello",
        "Dr. House",
        "Dr. Jekyll",
        "Dracula",
        "Dragon",
        "Druid",
        "Dwarf",
        "Eric Cartman",
        "Fantastic Four",
        "Flash",
        "Forrest Gump",
        "Frankenstein",
        "Freddy Krueger",
        "Frodo",
        "Gandalf",
        "Geralt of Rivia",
        "Ghost Rider",
        "Godzilla",
        "Goku",
        "Goofy",
        "Green Arrow",
        "Green Lantern",
        "Griffin",
        "Guardians of the Galaxy",
        "Hamlet",
        "Hancock",
        "Harry Potter",
        "He-Man",
        "Hellboy",
        "Hercules",
        "Herkules Poirot",
        "Hermione Granger",
        "Homer Simpson",
        "Hulk",
        "Indiana Jones",
        "Iolaus",
        "Iron Man",
        "Jack Sparrow",
        "James Bond",
        "Judge Dredd",
        "Lara Croft",
        "Legolas",
        "Leonardo",
        "Little John",
        "Loki",
        "Lord Voldemort",
        "Luigi",
        "Luke Cage",
        "Luke Skywalker",
        "Mad Max",
        "Maid Marian",
        "Mario",
        "Master Yoda",
        "Megatron",
        "Michelangelo",
        "Mickey Mouse",
        "Minotaur",
        "Mordred",
        "Morgoth",
        "Mr. Hyde",
        "Naruto",
        "Necromancer",
        "Nyan Cat",
        "Obelix",
        "Obi-Wan Kenobi",
        "Ogre",
        "Optimus Prime",
        "Orc",
        "Paladin",
        "Peter Griffin",
        "Piccolo",
        "Pikachu",
        "Pluto",
        "Popeye",
        "Portos",
        "Power Rangers",
        "Predator",
        "Professor X",
        "Prometheus",
        "Punisher",
        "Queen Elsa",
        "Rambo",
        "Richie Rich",
        "Rita Repulsa",
        "Robin",
        "Robin Hood",
        "Robocop",
        "Rocky",
        "Saruman",
        "Sauron",
        "Scrooge McDuck",
        "Severus Snape",
        "Sherlock Holmes",
        "Shredder",
        "Silver Surfer",
        "Siren",
        "Sirius Black",
        "Sonic the Hedgehog",
        "Sorcerer",
        "Spartacus",
        "Spider-Man",
        "Spider-Woman",
        "Splinter",
        "SpongeBob",
        "Steve Stifler",
        "Storm",
        "Superman",
        "Tarzan",
        "Teenage Mutant Ninja Turtles",
        "Terminator",
        "The Joker",
        "The Mask",
        "Thor",
        "Tony Stark",
        "Uruk-hai",
        "Van Helsing",
        "Vegeta",
        "Werewolf",
        "Willy Wonka",
        "Winnetou",
        "Witch",
        "Wizard",
        "Wolverine",
        "Wonder Woman",
        "Wyvern",
        "Xena",
        "Zombie",
        "Zordon"
      ]
    },
    {
      "id": "companies",
      "minScore": 0,
      "name": "Companies & brands",
      "questions": [
        "AT&T",
        "Acer",
        "Activision Blizzard",
        "Adidas",
        "Adobe",
        "Alibaba",
        "Allianz",
        "Alphabet",
        "Amazon",
        "American Express",
        "Amica",
        "Apple",
        "Audi",
        "BMW",
        "Bank of America",
        "Bayer",
        "Boeing",
        "Budweiser",
        "CVS",
        "Canon",
        "Chanel",
        "Chevrolet",
        "Cisco",
        "Coca-Cola",
        "Colgate",
        "Corona",
        "Danone",
        "Dell",
        "Dove",
        "ESPN",
        "Ebay",
        "Facebook",
        "Fanta",
        "FedEx",
        "Ford",
        "Fox",
        "Frito-Lay",
        "Gillette",
        "Google",
        "Gucci",
        "H&M",
        "HP",
        "Heineken",
        "Hermès",
        "Home Depot",
        "Honda",
        "Huawei",
        "Hyundai",
        "IBM",
        "IKEA",
        "Indomie",
        "Intel",
        "J.P. Morgan",
        "Johnson & Johnson",
        "KFC",
        "Kellogg's",
        "KitKat",
        "Knorr",
        "Kraft",
        "L'Oréal",
        "LEGO",
        "Lancome",
        "Lay's",
        "Lexus",
        "Louis Vuitton",
        "Lowe's",
        "Lux",
        "Marlboro",
        "Mastercard",
        "McDonald's",
        "Mercedes-Benz",
        "Microsoft",
        "Milky Way",
        "Motorola",
        "Nescafé",
        "Nestlé",
        "Netflix",
        "Nike",
        "Nissan",
        "Nivea",
        "Palmolive",
        "Pampers",
        "Panasonic",
        "PayPal",
        "Pepsi",
        "Philips",
        "Porsche",
        "Red Bull",
        "Rolex",
        "Samsung",
        "Santander",
        "Siemens",
        "Sony",
        "Sprite",
        "Starbucks",
        "T-Mobile",
        "UPS",
        "Uniqlo",
        "Verizon",
        "Visa",
        "Volkswagen",
        "Walmart",
        "Walt Disney",
        "Xiaomi",
        "Zara"
      ]
    },
    {
      "id": "got",
      "minScore": 0,
      "name": "Game of Thrones",
      "questions": [
        "Aerys Targaryen",
        "Arya Stark",
        "Blackfyre Rebellion",
        "Braavos",
        "Bran Stark",
        "Bridge Of Volantis",
        "Brienne of Tarth",
        "Bronn",
        "Castamere",
        "Casterly Rock",
        "Castle Black",
        "Catelyn Stark",
        "Cersei Lannister",
        "Crow",
        "Daario Naharis",
        "Daenerys Targaryen",
        "Davos Seaworth",
        "Deep Lake",
        "Deepwood Motte",
        "Direwolf",
        "Dorne",
        "Dothraki",
        "Dragonstone",
        "Eastwatch by the Sea",
        "Ellaria Sand",
        "Eunuch",
        "Faceless Men",
        "Family, Duty, Honor",
        "Fu*k the king",
        "Gendry",
        "Gilly",
        "Grayscale",
        "Grey Worm",
        "Greyguard",
        "Greywater Watch",
        "Hand of the King",
        "Harrenhal",
        "Hodor",
        "House Arryn",
        "House Baratheon",
        "House Greyjoy",
        "House Lannister",
        "House Martell",
        "House Stark",
        "House Targaryen",
        "House Tully",
        "House Tyrell",
        "Iron Throne",
        "Ironrath",
        "Jaime Lannister",
        "Jaqen H'ghar",
        "Jeor Mormont",
        "Joffrey Baratheon",
        "Jon Snow",
        "Jorah Mormont",
        "Karhold",
        "Khal Drogo",
        "Khaleesi",
        "King's Landing",
        "Littlefinger",
        "Maester",
        "Margaery Tyrell",
        "Melisandre",
        "Missandei",
        "Moat Cailin",
        "Ned Stark",
        "Night's Watch",
        "Ours is the Fury",
        "Petyr Baelish",
        "Pyke",
        "R'hllor",
        "Ramsay Bolton",
        "Robb Stark",
        "Robert Baratheon",
        "Roose Bolton",
        "Samwell Tarly",
        "Sandor Clegane",
        "Sansa Stark",
        "Seagard",
        "Shae",
        "Sons of the Harpy",
        "Stannis Baratheon",
        "Starfall",
        "Storm's End",
        "Summerhall",
        "Sunspear",
        "Talisa Maegyr",
        "The Crag",
        "The High Sparrow",
        "The Hound",
        "The Mountain",
        "The Nightfort",
        "The Red Keep",
        "The Twins",
        "Theon Greyjoy",
        "Tommen Baratheon",
        "Tormund Giantsbane",
        "Tyrion Lannister",
        "Tywin Lannister",
        "Unbowed, Unbent, Unbroken",
        "Unsullied",
        "Valar Morghulis",
        "Varys",
        "Viserys Targarye",
        "We Do Not Sow",
        "Wildlings",
        "Winter is Coming",
        "Winterfell",
        "Ygritte",
        "Yunkai"
      ]
    },
    {
      "id": "harrypotter",
      "minScore": 0,
      "name": "Harry Potter",
      "questions": [
        "Fenrir Greyback",
        "Dobby",
        "Kreacher",
        "Moaning Myrtle",
        "Professor Trelawney",
        "Nagini",
        "Hedwig",
        "Peter Pettigrew",
        "Alastor Moody",
        "Dolores Umbridge",
        "Hog’s Head",
        "Rose Granger Weasley",
        "Hugo Granger Weasley",
        "Scorpious Malfoy",
        "Scrabbers",
        "Hermione Granger",
        "Ronald Weasley",
        "Ginny Weasley",
        "George Weasley",
        "Fred Weasley",
        "Arthur Weasley",
        "Molly Weasley",
        "Percy Weasley",
        "James Potter",
        "Lily Potter",
        "Charlie Weasley",
        "Tom Marvolo Riddle",
        "Basilisk",
        "Lord Voldemort",
        "Sirius Black",
        "Harry Potter ",
        "Lavender Brown",
        "Cho Chang",
        "Crabbe",
        "Draco Malfoy",
        "Remus Lupin",
        "Neville Longbottom",
        "Goyle",
        "Rolanda Hooch",
        "Lee Jordan",
        "Gregorovitch",
        "Rubeus Hagrid",
        "Marcus Flint",
        "Cornelius Fudge",
        "Cedric Diggory",
        "Augustus Rookwood",
        "Bellatrix Lestrange",
        "Barty Crouch",
        "Alice Longbottom",
        "Frank Longbottom",
        "Theodore Nott",
        "Elphias Doge",
        "Professor Quirrell",
        "Luna Lovegood",
        "Bathilda Bagshot",
        "Newt Scammander",
        "Albus Dumbledore",
        "Dudley Dursley",
        "Petunia Dursley",
        "Vernon Dursley",
        "Fleur Delacour",
        "Victor Krum",
        "Minerva McGonagall",
        "Severus Snape",
        "Eileen Prince",
        "Horace Slughorn",
        "Parvati Patil",
        "Padma Patil",
        "Seamus Finnigan",
        "Dean Thomas",
        "Godric Gryffindor",
        "Rowena Ravenclaw",
        "Salazar Slytherin",
        "Helga Hufflepuff",
        "Oliver Wood",
        "Angelina Johnson",
        "Katie Bell",
        "Sir Nicholas",
        "Argus Filch",
        "Helena Ravenclaw",
        "Fat Friar",
        "Peeves",
        "Bloody Baron",
        "Cormac McLaggen",
        "Hannah Abott",
        "Susan Bones",
        "Demelza Robins",
        "Lucius Malfoy",
        "Narcissa Malfoy",
        "Andromeda Tonks",
        "Nymphadora Tonks",
        "Ted Tonks",
        "Teddy Lupin",
        "Victorie Weasley",
        "James Sirius Potter",
        "Albus Severus Potter",
        "Lily luna Potter",
        "Expecto patronum",
        "Accio",
        "stupefy",
        "Obliviate",
        "confundo",
        "lumos",
        "Crucio",
        "Petrificus totalus",
        "Wingardium leviosa",
        "Expelliarmus",
        "Alohomora",
        "Avada kedavra",
        "Sectumsempra",
        "Alohomora",
        "Oculus Reparo",
        "riddikulus",
        "Bubble Head charm",
        "Cushioning charm",
        "Expecto patronum",
        "The burrow",
        "Godric’s hollow",
        "Malfoy manor",
        "Grimmauld place",
        "Shell cottage",
        "Spinner’s end",
        "beauxbatons",
        "durmstrang",
        "Livermony",
        "Castlebruxo",
        "Diagon alley",
        "Flourish and blotts",
        "Gringotts Wizarding Bank",
        "Borgin and Burkes",
        "Knockturn Alley",
        "Ollivanders",
        "Leaky Cauldron",
        "Weasleys’ Wizard Wheezes",
        "Hogsmeade",
        "Three Broomsticks",
        "Honeydukes",
        "Hog’s Head",
        "Shrieking Shack",
        "Azkaban",
        "Ministry of Magic",
        "PLatform Nine and Three Quarters",
        "Daphne Greengrass",
        "Hog’s Head",
      ]
    },
    {
      "id": "mcu",
      "minScore": 0,
      "name": "Marvel Cinematic",
      "questions": [
        "(Infinity) Gauntlet",
        "Ancient one",
        "Antman",
        "Asgard",
        "Avengers",
        "Bifröst",
        "Black Panther",
        "Black Widow",
        "Bruce Banner",
        "Bucky (James Barnes)",
        "Captain America",
        "Captain Marvel",
        "Carol Danvers",
        "Chitauri",
        "Civil war",
        "Clint Barton",
        "Dora Milaje",
        "Dr (Erik) Selvig",
        "Drax the Destroyer",
        "Eye of Agamotto",
        "Falcon",
        "Frigga",
        "Gamora",
        "Groot",
        "Guardians of the Galaxy",
        "Hank Pym",
        "Happy (Hogan)",
        "Hawkeye",
        "Heimdall",
        "Hela",
        "Hope van Dyne",
        "Hulk",
        "Hydra",
        "Infinity stones",
        "Iron Man",
        "J.A.R.V.I.S.",
        "James Rhodes",
        "Knowhere",
        "Kree",
        "Loki",
        "Malekith",
        "Mantis",
        "Maria Hill",
        "Mark (Iron Man suit)",
        "Mind stone",
        "Mjölnir",
        "Natasha Romanoff",
        "Nebula",
        "Nick Fury",
        "Nine Realms",
        "Odin",
        "Okoye",
        "Pepper Potts",
        "Peter Parker",
        "Peter Quill",
        "Phil Coulson",
        "Power stone",
        "Quantum realm",
        "Quicksilver",
        "Ragnarok",
        "Reality stone (Aether)",
        "Red Skull",
        "Rocket",
        "Ronan the Acuser",
        "S.H.I.E.L.D.",
        "Sakaar",
        "Sam Wilson",
        "Scarlet Witch",
        "Scott Lang",
        "Shuri",
        "Skrull",
        "Sokovia Accords",
        "Soul stone",
        "Space stone",
        "Spider-Man",
        "Stan Lee",
        "Star Lord",
        "Stephen Strange",
        "Steve Rogers",
        "Storm Breaker",
        "T'Challa",
        "Tessaract",
        "Thanos",
        "The Collector",
        "The snap",
        "Thor",
        "Time stone",
        "Tony Stark",
        "Ultron",
        "Valkyrie",
        "Vibranium",
        "Vision",
        "Vormir",
        "Wakanda",
        "Wanda Maximoff",
        "War Machine",
        "Wasp",
        "Winter Soldier",
        "Xandar"
      ]
    },
    {
      "id": "random",
      "minScore": 0,
      "name": "Random Words",
      "questions": [
        "abandon",
        "keen",
        "jealous",
        "tact",
        "oath",
        "vacant",
        "hardship",
        "gallant",
        "data",
        "unaccustomed",
        "bachelor",
        "qualify",
        "corpse",
        "conceal",
        "dismal",
        "frigid",
        "inhabit",
        "numb",
        "peril",
        "recline",
        "shriek",
        "sinister",
        "tempt",
        "wager",
        "typical",
        "minimum",
        "scarce",
        "annual",
        "persuade",
        "essential",
        "blend",
        "visible",
        "expensive",
        "talent",
        "devise",
        "wholesale",
        "vapor",
        "eliminate",
        "villain",
        "dense",
        "utilize",
        "humid",
        "theory",
        "descend",
        "circulate",
        "enormous",
        "predict",
        "vanish",
        "tradition",
        "rural",
        "burden",
        "campus",
        "majority",
        "assemble",
        "explore",
        "topic",
        "debate",
        "evade",
        "probe",
        "reform",
        "approach",
        "detect",
        "defect",
        "employee",
        "neglect",
        "deceive",
        "popular",
        "thorough",
        "client",
        "comprehensive",
        "defraud",
        "postpone",
        "consent",
        "massive",
        "capsule",
        "preserve",
        "denounce",
        "unique",
        "torrent",
        "resent",
        "molest",
        "gloomy",
        "unforeseen",
        "exaggerate",
        "amateur",
        "mediocre",
        "variety",
        "valid",
        "survive",
        "weird",
        "prominent",
        "security",
        "bulky",
        "reluctant",
        "obvious",
        "vicinity",
        "century",
        "rage",
        "document",
        "conclude",
        "resist",
        "lack",
        "ignore",
        "challenge",
        "miniature",
        "source",
        "excel",
        "feminine",
        "mount",
        "compete",
        "dread",
        "masculine",
        "menace",
        "tendency",
        "underestimate",
        "victorious",
        "numerous",
        "flexible",
        "evidence",
        "solitary",
        "vision",
        "frequent",
        "glimpse",
        "recent",
        "decade",
        "hesitate",
        "absurd",
        "conflict",
        "minority",
        "fiction",
        "ignite",
        "abolish",
        "urban",
        "population",
        "frank",
        "pollute",
        "reveal",
        "prohibit",
        "urgent",
        "adequate",
        "decrease",
        "audible",
        "journalist",
        "famine",
        "revive",
        "commence",
        "observant",
        "identify",
        "migrate",
        "vessel",
        "persist",
        "hazy",
        "gleam",
        "editor",
        "rival",
        "violent",
        "brutal",
        "opponent",
        "brawl",
        "duplicate",
        "vicious",
        "whirl",
        "underdog",
        "thrust",
        "expand",
        "alter",
        "bewildered",
        "mature",
        "sacred",
        "revise",
        "pledge",
        "casual",
        "pursue",
        "unanimous",
        "fortunate",
        "pioneer",
        "innovative",
        "slender",
        "surpass",
        "vast",
        "doubt",
        "capacity",
        "penetrate",
        "pierce",
        "accurate",
        "microscope",
        "grateful",
        "cautious",
        "confident",
        "appeal",
        "addict",
        "wary",
        "aware",
        "misfortune",
        "avoid",
        "wretched",
        "keg",
        "nourish",
        "harsh",
        "quantity",
        "tragedy",
        "pedestrian",
        "glance",
        "budget",
        "nimble",
        "manipulate",
        "reckless",
        "horrid",
        "rave",
        "economy",
        "lubricate",
        "genius",
        "harvest",
        "abundant",
        "uneasy",
        "calculate",
        "absorb",
        "estimate",
        "morsel",
        "quota",
        "threat",
        "panic",
        "ban",
        "appropriate",
        "emerge",
        "jagged",
        "linger",
        "ambush",
        "crafty",
        "defiant",
        "vigor",
        "perish",
        "fragile",
        "captive",
        "prosper",
        "devour",
        "plea",
        "weary",
        "collide",
        "confirm",
        "verify",
        "anticipate",
        "dilemma",
        "detour",
        "merit",
        "transmit",
        "relieve",
        "baffle",
        "warden",
        "acknowledge",
        "justice",
        "delinquent",
        "reject",
        "deprive",
        "spouse",
        "vocation",
        "unstable",
        "homicide",
        "penalize",
        "beneficiary",
        "reptile",
        "forbid",
        "logical",
        "exhibit",
        "proceed",
        "precaution",
        "extract",
        "prior",
        "embrace",
        "valiant",
        "partial",
        "fierce",
        "detest",
        "sneer",
        "scowl",
        "encourage",
        "consider",
        "vermin",
        "wail",
        "symbol",
        "authority",
        "neutral",
        "trifle",
        "architect",
        "matrimony",
        "baggage",
        "squander",
        "abroad",
        "fugitive",
        "calamity",
        "pauper",
        "envy",
        "collapse",
        "prosecute",
        "possible",
        "compel",
        "awkward",
        "venture",
        "awesome",
        "guide",
        "quench",
        "betray",
        "utter",
        "pacify",
        "respond",
        "beckon",
        "despite",
        "disrupt",
        "rash",
        "rapid",
        "exhaust",
        "severity",
        "feeble",
        "unite",
        "cease",
        "thrifty",
        "miserly",
        "monarch",
        "outlaw",
        "promote",
        "illustrate",
        "disclose",
        "excessive",
        "disaster",
        "censor",
        "culprit",
        "juvenile",
        "bait",
        "insist",
        "toil",
        "blunder",
        "daze",
        "mourn",
        "subside",
        "maim",
        "comprehend",
        "commend",
        "final",
        "exempt",
        "vain",
        "repetition",
        "depict",
        "mortal",
        "novel",
        "occupant",
        "appoint",
        "quarter",
        "site",
        "quote",
        "verse",
        "morality",
        "roam",
        "attract",
        "commuter",
        "confine",
        "idle",
        "idol",
        "jest",
        "patriotic",
        "dispute",
        "valor",
        "lunatic",
        "vein",
        "uneventful",
        "fertile",
        "refer",
        "distress",
        "diminish",
        "maximum",
        "flee",
        "vulnerable",
        "signify",
        "mythology",
        "colleague",
        "torment",
        "provide",
        "loyalty",
        "volunteer",
        "prejudice",
        "shrill",
        "jolly",
        "witty",
        "hinder",
        "lecture",
        "abuse",
        "mumble",
        "mute",
        "retain",
        "candidate",
        "precede",
        "adolescent",
        "radical",
        "spontaneous",
        "skim",
        "vaccinate",
        "untidy",
        "utensil",
        "sensitive",
        "temperate",
        "vague",
        "elevate",
        "lottery",
        "finance",
        "obtain",
        "cinema",
        "event",
        "discard",
        "soar",
        "subsequent",
        "relate",
        "stationary",
        "prompt",
        "hasty",
        "scorch",
        "tempest",
        "soothe",
        "sympathetic",
        "redeem",
        "resume",
        "harmony",
        "refrain",
        "illegal",
        "narcotic",
        "heir",
        "majestic",
        "dwindle",
        "surplus",
        "traitor",
        "deliberate",
        "vandal",
        "drought",
        "abide",
        "unify",
        "summit",
        "heed",
        "biography",
        "drench",
        "swarm",
        "wobble",
        "tumult",
        "kneel",
        "dejected",
        "obedient",
        "recede",
        "tyrant",
        "charity",
        "verdict",
        "unearth",
        "depart",
        "coincide",
        "cancel",
        "debtor",
        "legible",
        "placard",
        "contagious",
        "clergy",
        "customary",
        "transparent",
        "scald",
        "epidemic",
        "obesity",
        "magnify",
        "obstacle",
        "ventilate",
        "jeopardize",
        "negative",
        "pension",
        "vital",
        "municipal",
        "oral",
        "complacent",
        "wasp",
        "rehabilitate",
        "parole",
        "vertical",
        "multitude",
        "nominate",
        "potential",
        "morgue",
        "preoccupied",
        "upholstery",
        "indifference",
        "maintain",
        "snub",
        "endure",
        "wrath",
        "expose",
        "legend",
        "ponder",
        "resign",
        "drastic",
        "wharf",
        "amend",
        "ballot"
      ]
    }
  ]
};

class Themes {
  static List<Theme> themes;

  static void sortThemes() {
    List<String> _themesOpen = UserAccount.themesOpen;
    List<Theme> openThemes = Themes.themes.where((e) {
          return _themesOpen.contains(e.id) || e.minScore == 0;
        }).toList(),
        notOpenThemes = Themes.themes.where((e) {
          return e.minScore > 0 && !_themesOpen.contains(e.id);
        }).toList();
    openThemes.sort((t1, t2) {
      return t1.minScore.compareTo(t2.minScore);
    });
    notOpenThemes.sort((t1, t2) {
      return t1.minScore.compareTo(t2.minScore);
    });
    Themes.themes = openThemes + notOpenThemes;
  }

  static void getThemesFromApp() {
    Themes.themes = [];
    (themedata['themeList'] as List<dynamic>).forEach((th) {
      themes.add(new Theme(
        th['id'],
        th['name'],
        th['questions'],
        th['minScore'],
      ));
    });
  }
}

class Theme {
  String id, name;
  int minScore;
  List<String> questions;
  String password;
  DocumentReference ref;
  Theme(this.id, this.name, this.questions, this.minScore, {this.password});

  Theme.fromJson(DocumentSnapshot doc) {
    var data = doc.data;
    this.ref = doc.reference;
    this.id = data["id"];
    this.name = data["name"];
    this.minScore = int.parse(data["minScore"].toString());
    this.questions = List<String>.generate(
        data["questions"].length, (i) => data["questions"][i]);
    this.password = data["password"];
  }

  Map<String, dynamic> toJson() => {
        "id": this.id,
        "name": this.name,
        "minScore": this.minScore,
        "questions": this.questions,
        "password": this.password,
      };
}
